libos.entrypoint = "{{ entrypoint }}"
libos.check_invalid_pointers = false

loader.entrypoint = "file:{{ gramine.libos }}"
loader.log_level = "{{ log_level }}"
# loader.log_file = ""

loader.insecure__use_cmdline_argv = true
loader.insecure__use_host_env = true

loader.env.LD_LIBRARY_PATH = "{{ python.stdlib }}/lib:/usr/local{{ arch_libdir }}:/usr{{ arch_libdir }}:/lib:{{ arch_libdir }}"
loader.env.HOME = "{{ env.HOME }}"
loader.env.LC_ALL = "C"

loader.pal_internal_mem_size = "200M"

sys.enable_sigterm_injection = true
sys.stack.size = "2M"

fs.mounts = [
  { path = "{{ entrypoint }}", uri = "file:{{ entrypoint }}" },
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr", uri = "file:/usr" },
  { path = "/etc", uri = "file:/etc" },
  { type = "tmpfs", path = "/tmp" },
{% for path in python.get_sys_path(entrypoint) %}
  { path = "{{ path }}", uri = "file:{{ path }}" },
{% endfor %}
]

# Note that Gramine also creates an internal
# thread for handling inter-process communication (IPC), and potentially another
# thread for asynchronous events. Therefore, the actual number of threads that
# the application can create is (sgx.thread_num - 2).

sgx.debug = false
sgx.remote_attestation = "dcap"
sgx.nonpie_binary = true
sgx.enable_stats = false
sgx.preheat_enclave = false
sgx.enclave_size = "2G"
sgx.insecure__rpc_thread_num = 0
sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '16' }}
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

# sgx.require_avx = true
# sgx.require_avx512 = true
# sgx.require_amx = true

sgx.trusted_files = [
  "file:{{ entrypoint }}",
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr{{ arch_libdir }}/",
  "file:/usr/local{{ arch_libdir }}/",
{% for path in python.get_sys_path(entrypoint) %}
  "file:{{ path }}{{ '/' if path.is_dir() else '' }}",
{% endfor %}
  "file:/etc/ssl/certs/ca-certificates.crt",
  "file:/etc/default/apport",
  "file:/etc/mime.types",
  "file:grpc-server.py",
  "file:grpc-client.py",
  "file:helloworld_pb2.py",
  "file:helloworld_pb2_grpc.py",
]

sgx.allowed_files = [
  "file:/usr/lib/ssl/openssl.cnf",
  "file:/usr/bin/ld",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:/etc/ld.so.conf",
  "file:/etc/gai.conf",
  "file:/etc/host.conf",
  "file:/etc/resolv.conf",
  "file:/etc/nsswitch.conf",
  "file:/etc/sgx_default_qcnl.conf",
  "file:dynamic_config.json",
]
